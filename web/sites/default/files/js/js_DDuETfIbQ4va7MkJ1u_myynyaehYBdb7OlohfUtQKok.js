/*!
 * jQuery Once v2.2.3 - http://github.com/robloach/jquery-once
 * @license MIT, GPL-2.0
 *   http://opensource.org/licenses/MIT
 *   http://opensource.org/licenses/GPL-2.0
 */
(function(e){"use strict";if(typeof exports==="object"&&typeof exports.nodeName!=="string"){e(require("jquery"))}else if(typeof define==="function"&&define.amd){define(["jquery"],e)}else{e(jQuery)}})(function(t){"use strict";var r=function(e){e=e||"once";if(typeof e!=="string"){throw new TypeError("The jQuery Once id parameter must be a string")}return e};t.fn.once=function(e){var n="jquery-once-"+r(e);return this.filter(function(){return t(this).data(n)!==true}).data(n,true)};t.fn.removeOnce=function(e){return this.findOnce(e).removeData("jquery-once-"+r(e))};t.fn.findOnce=function(e){var n="jquery-once-"+r(e);return this.filter(function(){return t(this).data(n)===true})}});

/**
 * @file
 * JavaScript integration between Chart.js and Drupal.
 */

(function ($) {
  'use strict';

  Drupal.behaviors.chartsChartjs = {
    attach: function (context, settings) {
      var contents = new Drupal.Charts.Contents();

      $('.charts-chartjs').each(function (param) {
        // Store attributes before switching div for canvas element.
        var chartId = $(this).attr('id');
        var dataChart = "data-chart='" + document.getElementById(chartId).getAttribute("data-chart") + "'";
        var style = 'style="' + document.getElementById(chartId).getAttribute('style') + '"';

        $(this).replaceWith(function (n) {
          return '<canvas ' + dataChart + style + 'id="' + chartId + '"' + '>' + n + '</canvas>'
        });

        $('#' + chartId).once().each(function () {
          var chartjsChart = $(this).attr('data-chart');
          var chart = contents.getData(chartId);
          var options = chart['options'];
          var myChart = new Chart(chartId, {
            type: chart['type'],
            data: chart['data'],
            options: options
          });
        });
      });
    }
  };

}(jQuery));
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(Drupal => {
  Drupal.Charts = Drupal.Charts || {};
  Drupal.Charts.Configs = Drupal.Charts.Configs || [];
  Drupal.Charts.Contents = class {
    constructor() {
      const charts_elements = document.querySelectorAll('[data-chart]');
      charts_elements.forEach(function (el) {
        const id = el.getAttribute('id');
        Drupal.Charts.Configs[id] = JSON.parse(el.getAttribute('data-chart'));
        Drupal.Charts.Configs[id].drupalChartDivElement = el;
        Drupal.Charts.Configs[id].drupalChartDivId = id;
      });
    }

    initialize(id) {
      const event = new CustomEvent('drupalChartsConfigsInitialization', {
        detail: Drupal.Charts.Configs[id]
      });
      Drupal.Charts.Configs[id].drupalChartDivElement.dispatchEvent(event);
    }

    static update(id, data) {
      if (Drupal.Charts.Configs.hasOwnProperty(id)) {
        Drupal.Charts.Configs[id] = data;
      }
    }

    getData(id) {
      if (Drupal.Charts.Configs.hasOwnProperty(id)) {
        this.initialize(id);
        return Drupal.Charts.Configs[id];
      }

      return {};
    }

  };
})(Drupal);
;
;
;
