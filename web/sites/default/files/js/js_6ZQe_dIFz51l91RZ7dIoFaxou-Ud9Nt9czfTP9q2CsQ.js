/**
 * @file
 * JavaScript integration between Chart.js and Drupal.
 */
(function (Drupal, once) {

  'use strict';

  function copyAttributes(source, target) {
    return Array.from(source.attributes).forEach(attribute => {
      target.setAttribute(
        attribute.nodeName === 'id' ? 'data-id' : attribute.nodeName,
        attribute.nodeValue,
      );
    });
  }

  Drupal.behaviors.chartsChartjs = {
    attach: function (context) {
      const contents = new Drupal.Charts.Contents();

      once('load-charts-chartjs', '.charts-chartjs', context).forEach(function (element) {
        const chartId = element.id;
        // Switching div for canvas element.
        const parent = element.parentNode;
        const canvas = document.createElement('canvas');
        // Transferring the attributes of our source element to the canvas.
        copyAttributes(element, canvas);
        canvas.id = chartId;
        parent.replaceChild(canvas, element);

        // Initializing the chart item.
        const chart = contents.getData(chartId);
        const options = chart['options'];
        new Chart(chartId, {
          type: chart['type'],
          data: chart['data'],
          options: options,
        });
      });
    }
  };
}(Drupal, once));
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(Drupal => {
  Drupal.Charts = Drupal.Charts || {};
  Drupal.Charts.Configs = Drupal.Charts.Configs || [];
  Drupal.Charts.Contents = class {
    constructor() {
      const charts_elements = document.querySelectorAll('[data-chart]');
      charts_elements.forEach(function (el) {
        const id = el.getAttribute('id');
        Drupal.Charts.Configs[id] = JSON.parse(el.getAttribute('data-chart'));
        Drupal.Charts.Configs[id].drupalChartDivElement = el;
        Drupal.Charts.Configs[id].drupalChartDivId = id;
      });
    }

    initialize(id) {
      const event = new CustomEvent('drupalChartsConfigsInitialization', {
        detail: Drupal.Charts.Configs[id]
      });
      Drupal.Charts.Configs[id].drupalChartDivElement.dispatchEvent(event);
    }

    static update(id, data) {
      if (Drupal.Charts.Configs.hasOwnProperty(id)) {
        Drupal.Charts.Configs[id] = data;
      }
    }

    getData(id) {
      if (Drupal.Charts.Configs.hasOwnProperty(id)) {
        this.initialize(id);
        return Drupal.Charts.Configs[id];
      }

      return {};
    }

  };
})(Drupal);
;
